{
  "contractName": "ServiceRegistry",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "service",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xd598d4c9"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "inputs": [
        {
          "name": "_service",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "oldService",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newService",
          "type": "address"
        }
      ],
      "name": "ReplaceService",
      "type": "event",
      "signature": "0xb9e3587fba8495ea4ca8cd7a6a3c79a137417d0033018bf09e7b0b5b38dce974"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event",
      "signature": "0xf8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c64820"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_service",
          "type": "address"
        }
      ],
      "name": "replaceService",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x0680d58a"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806106f383398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061062f806100c46000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630680d58a14610072578063715018a6146100b55780638da5cb5b146100cc578063d598d4c914610123578063f2fde38b1461017a575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101bd565b005b3480156100c157600080fd5b506100ca610355565b005b3480156100d857600080fd5b506100e1610457565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012f57600080fd5b5061013861047c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018657600080fd5b506101bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104a2565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561021a57600080fd5b816000813b905060008111151561023057600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb9e3587fba8495ea4ca8cd7a6a3c79a137417d0033018bf09e7b0b5b38dce97483600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103b057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104fd57600080fd5b61050681610509565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561054557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058203bffcb5459c7dbb3c2c185547113970c38b530a06f8c44bdbbd3eb803902f18d0029",
  "deployedBytecode": "0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630680d58a14610072578063715018a6146100b55780638da5cb5b146100cc578063d598d4c914610123578063f2fde38b1461017a575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101bd565b005b3480156100c157600080fd5b506100ca610355565b005b3480156100d857600080fd5b506100e1610457565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012f57600080fd5b5061013861047c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561018657600080fd5b506101bb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104a2565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561021a57600080fd5b816000813b905060008111151561023057600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb9e3587fba8495ea4ca8cd7a6a3c79a137417d0033018bf09e7b0b5b38dce97483600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a150505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103b057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104fd57600080fd5b61050681610509565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561054557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058203bffcb5459c7dbb3c2c185547113970c38b530a06f8c44bdbbd3eb803902f18d0029",
  "sourceMap": "753:1135:9:-;;;1409:66;8:9:-1;5:2;;;30:1;27;20:12;5:2;1409:66:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;575:10:11;567:5;;:18;;;;;;;;;;;;;;;;;;1462:8:9;1452:7;;:18;;;;;;;;;;;;;;;;;;1409:66;753:1135;;;;;;",
  "deployedSourceMap": "753:1135:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:191;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1695:191:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:11;;;;;;238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:11;;;;;;;;;;;;;;;;;;;;;;;;;;;793:22:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;793:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;1695:191:9;1783:18;719:5:11;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1760:8:9;1205:11;1255:5;1243:18;1233:28;;1285:1;1276:6;:10;1268:19;;;;;;;;1804:7;;;;;;;;;;;1783:28;;1827:8;1817:7;;:18;;;;;;;;;;;;;;;;;;1846:35;1861:10;1873:7;;;;;;;;;;;1846:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;731:1:11;;1695:191:9;;:::o;1001:111:11:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;238:20::-;;;;;;;;;;;;;:::o;793:22:9:-;;;;;;;;;;;;;:::o;1274:103:11:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1512:171::-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o",
  "source": "/**\n   Copyright (c) 2017 Harbor Platform, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the “License”);\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an “AS IS” BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\npragma solidity ^0.4.24;\n\nimport 'zeppelin-solidity/contracts/ownership/Ownable.sol';\n\n/// @notice A service that points to a `RegulatorService`\ncontract ServiceRegistry is Ownable {\n  address public service;\n\n  /**\n   * @notice Triggered when service address is replaced\n   */\n  event ReplaceService(address oldService, address newService);\n\n  /**\n   * @dev Validate contract address\n   * Credit: https://github.com/Dexaran/ERC223-token-standard/blob/Recommended/ERC223_Token.sol#L107-L114\n   *\n   * @param _addr The address of a smart contract\n   */\n  modifier withContract(address _addr) {\n    uint length;\n    assembly { length := extcodesize(_addr) }\n    require(length > 0);\n    _;\n  }\n\n  /**\n   * @notice Constructor\n   *\n   * @param _service The address of the `RegulatorService`\n   *\n   */\n  constructor(address _service) public {\n    service = _service;\n  }\n\n  /**\n   * @notice Replaces the address pointer to the `RegulatorService`\n   *\n   * @dev This method is only callable by the contract's owner\n   *\n   * @param _service The address of the new `RegulatorService`\n   */\n  function replaceService(address _service) onlyOwner withContract(_service) public {\n    address oldService = service;\n    service = _service;\n    emit ReplaceService(oldService, service);\n  }\n}",
  "sourcePath": "/Users/tom/www/bitcademy-erc1404/contracts/ServiceRegistry.sol",
  "ast": {
    "absolutePath": "/Users/tom/www/bitcademy-erc1404/contracts/ServiceRegistry.sol",
    "exportedSymbols": {
      "ServiceRegistry": [
        3164
      ]
    },
    "id": 3165,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3102,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:24:9"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3103,
        "nodeType": "ImportDirective",
        "scope": 3165,
        "sourceUnit": 3345,
        "src": "634:59:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3104,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3344,
              "src": "781:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3344",
                "typeString": "contract Ownable"
              }
            },
            "id": 3105,
            "nodeType": "InheritanceSpecifier",
            "src": "781:7:9"
          }
        ],
        "contractDependencies": [
          3344
        ],
        "contractKind": "contract",
        "documentation": "@notice A service that points to a `RegulatorService`",
        "fullyImplemented": true,
        "id": 3164,
        "linearizedBaseContracts": [
          3164,
          3344
        ],
        "name": "ServiceRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3107,
            "name": "service",
            "nodeType": "VariableDeclaration",
            "scope": 3164,
            "src": "793:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3106,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "793:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@notice Triggered when service address is replaced",
            "id": 3113,
            "name": "ReplaceService",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3109,
                  "indexed": false,
                  "name": "oldService",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "909:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3111,
                  "indexed": false,
                  "name": "newService",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "929:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "908:40:9"
            },
            "src": "888:61:9"
          },
          {
            "body": {
              "id": 3128,
              "nodeType": "Block",
              "src": "1199:100:9",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3118,
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 3129,
                      "src": "1205:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3117,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1205:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3119,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1205:11:9"
                },
                {
                  "externalReferences": [
                    {
                      "length": {
                        "declaration": 3118,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1233:6:9",
                        "valueSize": 1
                      }
                    },
                    {
                      "_addr": {
                        "declaration": 3115,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1255:5:9",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 3120,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    length := extcodesize(_addr)\n}",
                  "src": "1222:53:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3122,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3118,
                          "src": "1276:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1285:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1276:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3991,
                        3992
                      ],
                      "referencedDeclaration": 3991,
                      "src": "1268:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3126,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:19:9"
                },
                {
                  "id": 3127,
                  "nodeType": "PlaceholderStatement",
                  "src": "1293:1:9"
                }
              ]
            },
            "documentation": "@dev Validate contract address\nCredit: https://github.com/Dexaran/ERC223-token-standard/blob/Recommended/ERC223_Token.sol#L107-L114\n   * @param _addr The address of a smart contract",
            "id": 3129,
            "name": "withContract",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3115,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 3129,
                  "src": "1184:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1183:15:9"
            },
            "src": "1162:137:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3138,
              "nodeType": "Block",
              "src": "1446:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3134,
                      "name": "service",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3107,
                      "src": "1452:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3135,
                      "name": "_service",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3131,
                      "src": "1462:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1452:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3137,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:18:9"
                }
              ]
            },
            "documentation": "@notice Constructor\n   * @param _service The address of the `RegulatorService`\n   ",
            "id": 3139,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3131,
                  "name": "_service",
                  "nodeType": "VariableDeclaration",
                  "scope": 3139,
                  "src": "1421:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1420:18:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 3133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:9"
            },
            "scope": 3164,
            "src": "1409:66:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3162,
              "nodeType": "Block",
              "src": "1777:109:9",
              "statements": [
                {
                  "assignments": [
                    3150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3150,
                      "name": "oldService",
                      "nodeType": "VariableDeclaration",
                      "scope": 3163,
                      "src": "1783:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3149,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1783:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3152,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3151,
                    "name": "service",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3107,
                    "src": "1804:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1783:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3153,
                      "name": "service",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3107,
                      "src": "1817:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3154,
                      "name": "_service",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3141,
                      "src": "1827:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1817:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3156,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:18:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3158,
                        "name": "oldService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3150,
                        "src": "1861:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3159,
                        "name": "service",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3107,
                        "src": "1873:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3157,
                      "name": "ReplaceService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3113,
                      "src": "1846:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1846:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3161,
                  "nodeType": "EmitStatement",
                  "src": "1841:40:9"
                }
              ]
            },
            "documentation": "@notice Replaces the address pointer to the `RegulatorService`\n   * @dev This method is only callable by the contract's owner\n   * @param _service The address of the new `RegulatorService`",
            "id": 3163,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3144,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3143,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3292,
                  "src": "1737:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1737:9:9"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3146,
                    "name": "_service",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3141,
                    "src": "1760:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3147,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3145,
                  "name": "withContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3129,
                  "src": "1747:12:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1747:22:9"
              }
            ],
            "name": "replaceService",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3141,
                  "name": "_service",
                  "nodeType": "VariableDeclaration",
                  "scope": 3163,
                  "src": "1719:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1718:18:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 3148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1777:0:9"
            },
            "scope": 3164,
            "src": "1695:191:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3165,
        "src": "753:1135:9"
      }
    ],
    "src": "608:1280:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/tom/www/bitcademy-erc1404/contracts/ServiceRegistry.sol",
    "exportedSymbols": {
      "ServiceRegistry": [
        3164
      ]
    },
    "id": 3165,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3102,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "608:24:9"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 3103,
        "nodeType": "ImportDirective",
        "scope": 3165,
        "sourceUnit": 3345,
        "src": "634:59:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3104,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3344,
              "src": "781:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3344",
                "typeString": "contract Ownable"
              }
            },
            "id": 3105,
            "nodeType": "InheritanceSpecifier",
            "src": "781:7:9"
          }
        ],
        "contractDependencies": [
          3344
        ],
        "contractKind": "contract",
        "documentation": "@notice A service that points to a `RegulatorService`",
        "fullyImplemented": true,
        "id": 3164,
        "linearizedBaseContracts": [
          3164,
          3344
        ],
        "name": "ServiceRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3107,
            "name": "service",
            "nodeType": "VariableDeclaration",
            "scope": 3164,
            "src": "793:22:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3106,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "793:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@notice Triggered when service address is replaced",
            "id": 3113,
            "name": "ReplaceService",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3109,
                  "indexed": false,
                  "name": "oldService",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "909:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3108,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "909:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3111,
                  "indexed": false,
                  "name": "newService",
                  "nodeType": "VariableDeclaration",
                  "scope": 3113,
                  "src": "929:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "908:40:9"
            },
            "src": "888:61:9"
          },
          {
            "body": {
              "id": 3128,
              "nodeType": "Block",
              "src": "1199:100:9",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3118,
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 3129,
                      "src": "1205:11:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3117,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1205:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3119,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1205:11:9"
                },
                {
                  "externalReferences": [
                    {
                      "length": {
                        "declaration": 3118,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1233:6:9",
                        "valueSize": 1
                      }
                    },
                    {
                      "_addr": {
                        "declaration": 3115,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1255:5:9",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 3120,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    length := extcodesize(_addr)\n}",
                  "src": "1222:53:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3122,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3118,
                          "src": "1276:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1285:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1276:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3991,
                        3992
                      ],
                      "referencedDeclaration": 3991,
                      "src": "1268:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3126,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:19:9"
                },
                {
                  "id": 3127,
                  "nodeType": "PlaceholderStatement",
                  "src": "1293:1:9"
                }
              ]
            },
            "documentation": "@dev Validate contract address\nCredit: https://github.com/Dexaran/ERC223-token-standard/blob/Recommended/ERC223_Token.sol#L107-L114\n   * @param _addr The address of a smart contract",
            "id": 3129,
            "name": "withContract",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3115,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 3129,
                  "src": "1184:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1184:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1183:15:9"
            },
            "src": "1162:137:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3138,
              "nodeType": "Block",
              "src": "1446:29:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3134,
                      "name": "service",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3107,
                      "src": "1452:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3135,
                      "name": "_service",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3131,
                      "src": "1462:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1452:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3137,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:18:9"
                }
              ]
            },
            "documentation": "@notice Constructor\n   * @param _service The address of the `RegulatorService`\n   ",
            "id": 3139,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3131,
                  "name": "_service",
                  "nodeType": "VariableDeclaration",
                  "scope": 3139,
                  "src": "1421:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1420:18:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 3133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:9"
            },
            "scope": 3164,
            "src": "1409:66:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3162,
              "nodeType": "Block",
              "src": "1777:109:9",
              "statements": [
                {
                  "assignments": [
                    3150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3150,
                      "name": "oldService",
                      "nodeType": "VariableDeclaration",
                      "scope": 3163,
                      "src": "1783:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3149,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1783:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3152,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3151,
                    "name": "service",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3107,
                    "src": "1804:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1783:28:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3153,
                      "name": "service",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3107,
                      "src": "1817:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3154,
                      "name": "_service",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3141,
                      "src": "1827:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1817:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3156,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:18:9"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3158,
                        "name": "oldService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3150,
                        "src": "1861:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3159,
                        "name": "service",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3107,
                        "src": "1873:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3157,
                      "name": "ReplaceService",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3113,
                      "src": "1846:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 3160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1846:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3161,
                  "nodeType": "EmitStatement",
                  "src": "1841:40:9"
                }
              ]
            },
            "documentation": "@notice Replaces the address pointer to the `RegulatorService`\n   * @dev This method is only callable by the contract's owner\n   * @param _service The address of the new `RegulatorService`",
            "id": 3163,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 3144,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3143,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3292,
                  "src": "1737:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1737:9:9"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3146,
                    "name": "_service",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3141,
                    "src": "1760:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3147,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3145,
                  "name": "withContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3129,
                  "src": "1747:12:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1747:22:9"
              }
            ],
            "name": "replaceService",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3141,
                  "name": "_service",
                  "nodeType": "VariableDeclaration",
                  "scope": 3163,
                  "src": "1719:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1718:18:9"
            },
            "payable": false,
            "returnParameters": {
              "id": 3148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1777:0:9"
            },
            "scope": 3164,
            "src": "1695:191:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3165,
        "src": "753:1135:9"
      }
    ],
    "src": "608:1280:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x8aF6a00727B5B246Aa7516c990A090FaD965A25A",
      "transactionHash": "0x8e015a7d6965a03aeb9f06334095479d530431d3e6754ebb919e19f0c9ceb357"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0x02EAd589e820266fB4154d593d4A6B158F64B86C",
      "transactionHash": "0xa811be5110b271923f854802bfb056881c12f156bc33f20af8c39bb0568b9aff"
    },
    "1556641261750": {
      "events": {},
      "links": {},
      "address": "0xA43b303dd4657943d172BdE699a7Ab74A5a81282",
      "transactionHash": "0x3aae7c125f5b09d3a736cff12c4b560e20f251d1c0c9376a53bd17fc3a1fc2d1"
    },
    "1556688358615": {
      "events": {},
      "links": {},
      "address": "0xfFf4DAB9d09Da9177AC98109929E431BDF7dD998",
      "transactionHash": "0xfde855318658d08ad29ce48c2725489f2a4e5d35e5355a9779609d679f0edd2c"
    },
    "1556700145717": {
      "events": {},
      "links": {},
      "address": "0xdD4f0669F57fe10cB1810F8c77452c6AE2A45834",
      "transactionHash": "0x8d9b07cf016cc4f26d928366a812820c9aa4bb244e2e0582c156f25609248602"
    }
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-05-01T10:26:41.303Z",
  "devdoc": {
    "methods": {
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "replaceService(address)": {
        "details": "This method is only callable by the contract's owner",
        "params": {
          "_service": "The address of the new `RegulatorService`"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "replaceService(address)": {
        "notice": "Replaces the address pointer to the `RegulatorService`"
      }
    }
  }
}